{
	"name": "SCD2_merge",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "cdcsparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "fd5bf385-efb3-49b4-900f-b8984bb251c9"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "sql"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/91b6e3ed-6c42-4e7a-8ed3-57f49a2a42ba/resourceGroups/SB_RelDB_CDC_Streaming/providers/Microsoft.Synapse/workspaces/asa-cdc-streaming/bigDataPools/cdcsparkpool",
				"name": "cdcsparkpool",
				"type": "Spark",
				"endpoint": "https://asa-cdc-streaming.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/cdcsparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"type_of_data = 'stock'\r\n",
					"\r\n",
					"pq_path = f\"abfss://dlcdcstreaming@dlcdcstreaming.dfs.core.windows.net/landing/{type_of_data}/output/year=*/month=*/day=*/hour=*/*.parquet\"\r\n",
					"\r\n",
					"df_pq = spark.read.format(\"parquet\").load(pq_path)\r\n",
					"\r\n",
					"df_pq.write.mode(\"append\").saveAsTable(f\"CDClanding.{type_of_data}_updates\")"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"INSERT INTO CDCStaging.CDCstaging_SCD2 --WITH (TABLOCK)\r\n",
					"  (\r\n",
					"    [StockItemID], \r\n",
					"    [StockItemName], \r\n",
					"    [SupplierID], \r\n",
					"    [ColorID], \r\n",
					"    [UnitPackageID], \r\n",
					"    [OuterPackageID],\r\n",
					"    [Brand],\r\n",
					"    [Size],\r\n",
					"    [LeadTimeDays],\r\n",
					"    [QuantityPerOuter],\r\n",
					"    [IsChillerStock],\r\n",
					"    [Barcode],\r\n",
					"    [TaxRate],\r\n",
					"    [UnitPrice],\r\n",
					"    [RecommendedRetailPrice],\r\n",
					"    [TypicalWeightPerUnit],\r\n",
					"    [MarketingComments],\r\n",
					"    [InternalComments],\r\n",
					"    [Photo],\r\n",
					"    [CustomFields],\r\n",
					"    [Tags],\r\n",
					"    [SearchDetails],\r\n",
					"    [LastEditedBy],\r\n",
					"    [CurrentFlag],\r\n",
					"    [EffDateFrom],\r\n",
					"    [EffDateTo]\r\n",
					"  )\r\n",
					"SELECT \r\n",
					"    [StockItemID],\r\n",
					"    [StockItemName],\r\n",
					"    [SupplierID],\r\n",
					"    [ColorID],\r\n",
					"    [UnitPackageID],\r\n",
					"    [OuterPackageID],\r\n",
					"    [Brand],\r\n",
					"    [Size],\r\n",
					"    [LeadTimeDays],\r\n",
					"    [QuantityPerOuter],\r\n",
					"    [IsChillerStock],\r\n",
					"    [Barcode],\r\n",
					"    [TaxRate],\r\n",
					"    [UnitPrice],\r\n",
					"    [RecommendedRetailPrice],\r\n",
					"    [TypicalWeightPerUnit],\r\n",
					"    [MarketingComments],\r\n",
					"    [InternalComments],\r\n",
					"    [Photo],\r\n",
					"    [CustomFields],\r\n",
					"    [Tags],\r\n",
					"    [SearchDetails],\r\n",
					"    [LastEditedBy],\r\n",
					"    NULL,\r\n",
					"    [ValidFrom],    --getdate()\r\n",
					"    NULL\r\n",
					"FROM\r\n",
					"  (MERGE INTO CDCStaging.CDCstaging_SCD2 AS tgt\r\n",
					"   USING\r\n",
					"    -- Query to return staged customer data\r\n",
					"    (SELECT     \r\n",
					"        [StockItemID],\r\n",
					"        [StockItemName],\r\n",
					"        [SupplierID],\r\n",
					"        [ColorID],\r\n",
					"        [UnitPackageID],\r\n",
					"        [OuterPackageID],\r\n",
					"        [Brand],\r\n",
					"        [Size],\r\n",
					"        [LeadTimeDays],\r\n",
					"        [QuantityPerOuter],\r\n",
					"        [IsChillerStock],\r\n",
					"        [Barcode],\r\n",
					"        [TaxRate],\r\n",
					"        [UnitPrice],\r\n",
					"        [RecommendedRetailPrice],\r\n",
					"        [TypicalWeightPerUnit],\r\n",
					"        [MarketingComments],\r\n",
					"        [InternalComments],\r\n",
					"        [Photo],\r\n",
					"        [CustomFields],\r\n",
					"        [Tags],\r\n",
					"        [SearchDetails],\r\n",
					"        [LastEditedBy])\r\n",
					"     FROM CDClanding.stock_updates\r\n",
					"     AS src ([StockItemID],\r\n",
					"        [StockItemName],\r\n",
					"        [SupplierID],\r\n",
					"        [ColorID],\r\n",
					"        [UnitPackageID],\r\n",
					"        [OuterPackageID],\r\n",
					"        [Brand],\r\n",
					"        [Size],\r\n",
					"        [LeadTimeDays],\r\n",
					"        [QuantityPerOuter],\r\n",
					"        [IsChillerStock],\r\n",
					"        [Barcode],\r\n",
					"        [TaxRate],\r\n",
					"        [UnitPrice],\r\n",
					"        [RecommendedRetailPrice],\r\n",
					"        [TypicalWeightPerUnit],\r\n",
					"        [MarketingComments],\r\n",
					"        [InternalComments],\r\n",
					"        [Photo],\r\n",
					"        [CustomFields],\r\n",
					"        [Tags],\r\n",
					"        [SearchDetails],\r\n",
					"        [LastEditedBy])\r\n",
					"   -- Match staged customers to existing (current) dimension records\r\n",
					"   ON (src.StockItemID = tgt.StockItemID AND tgt.CurrentFlag = 1)\r\n",
					"   -- If a current record for this customer already exists, mark it as a type 2 change\r\n",
					"   WHEN MATCHED THEN\r\n",
					"     UPDATE\r\n",
					"     SET tgt.CurrentFlag = 0, tgt.EffDateTo = getdate()\r\n",
					"   -- If not, insert a new record\r\n",
					"   WHEN NOT MATCHED THEN\r\n",
					"     INSERT (\r\n",
					"        [StockItemID], \r\n",
					"        [StockItemName], \r\n",
					"        [SupplierID], \r\n",
					"        [ColorID], \r\n",
					"        [UnitPackageID], \r\n",
					"        [OuterPackageID],\r\n",
					"        [Brand],\r\n",
					"        [Size],\r\n",
					"        [LeadTimeDays],\r\n",
					"        [QuantityPerOuter],\r\n",
					"        [IsChillerStock],\r\n",
					"        [Barcode],\r\n",
					"        [TaxRate],\r\n",
					"        [UnitPrice],\r\n",
					"        [RecommendedRetailPrice],\r\n",
					"        [TypicalWeightPerUnit],\r\n",
					"        [MarketingComments],\r\n",
					"        [InternalComments],\r\n",
					"        [Photo],\r\n",
					"        [CustomFields],\r\n",
					"        [Tags],\r\n",
					"        [SearchDetails],\r\n",
					"        [LastEditedBy],\r\n",
					"        [CurrentFlag],\r\n",
					"        [EffDateFrom],\r\n",
					"        [EffDateTo]\r\n",
					"        )\r\n",
					"     VALUES ([StockItemID],\r\n",
					"    [StockItemName],\r\n",
					"    [SupplierID],\r\n",
					"    [ColorID],\r\n",
					"    [UnitPackageID],\r\n",
					"    [OuterPackageID],\r\n",
					"    [Brand],\r\n",
					"    [Size],\r\n",
					"    [LeadTimeDays],\r\n",
					"    [QuantityPerOuter],\r\n",
					"    [IsChillerStock],\r\n",
					"    [Barcode],\r\n",
					"    [TaxRate],\r\n",
					"    [UnitPrice],\r\n",
					"    [RecommendedRetailPrice],\r\n",
					"    [TypicalWeightPerUnit],\r\n",
					"    [MarketingComments],\r\n",
					"    [InternalComments],\r\n",
					"    [Photo],\r\n",
					"    [CustomFields],\r\n",
					"    [Tags],\r\n",
					"    [SearchDetails],\r\n",
					"    [LastEditedBy],\r\n",
					"    NULL,\r\n",
					"    [ValidFrom],    --getdate()\r\n",
					"    NULL\r\n",
					"    )"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}